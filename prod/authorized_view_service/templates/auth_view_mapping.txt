salus_integration_legacy|applicants_salus_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.firstname, VAULT.uuid)) ELSE raw.firstname END AS firstname, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.lastname, VAULT.uuid)) ELSE raw.lastname END AS lastname, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.email, VAULT.uuid)) ELSE raw.email END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.phone, VAULT.uuid)) ELSE raw.phone END AS phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.ssn, VAULT.uuid)) ELSE raw.ssn END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.address, VAULT.uuid)) ELSE raw.address END AS address, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.city, VAULT.uuid)) ELSE raw.city END AS city, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.zip, VAULT.uuid)) ELSE raw.zip END AS zip, raw.* EXCEPT(firstname, lastname, email, phone, ssn, address, city, zip) FROM `sambla-data-staging-compliance.salus_integration_legacy.applicants_salus_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.ssn = VAULT.ssn 
rahalaitos_integration_legacy|marketing_applicant_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.sotu, VAULT.uuid)) ELSE raw.sotu END AS sotu, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.etunimi, VAULT.uuid)) ELSE raw.etunimi END AS etunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.sukunimi, VAULT.uuid)) ELSE raw.sukunimi END AS sukunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.puhelin, VAULT.uuid)) ELSE raw.puhelin END AS puhelin, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.email, VAULT.uuid)) ELSE raw.email END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.osoite, VAULT.uuid)) ELSE raw.osoite END AS osoite, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.kaupunki, VAULT.uuid)) ELSE raw.kaupunki END AS kaupunki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.postinro, VAULT.uuid)) ELSE raw.postinro END AS postinro, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.pankki, VAULT.uuid)) ELSE raw.pankki END AS pankki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.tili, VAULT.uuid)) ELSE raw.tili END AS tili, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yhtio, VAULT.uuid)) ELSE raw.yhtio END AS yhtio, raw.* EXCEPT(sotu, etunimi, sukunimi, puhelin, email, osoite, kaupunki, postinro, pankki, tili, yhtio) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.marketing_applicant_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.sotu = VAULT.ssn 
rahalaitos_integration_legacy|rahalaitos_customer_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.ssn, VAULT.uuid)) ELSE raw.ssn END AS ssn, raw.* EXCEPT(ssn) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_customer_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.ssn = VAULT.ssn 
rahalaitos_integration_legacy|rahalaitos_laina_yv_candidateinfo_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_etunimi, VAULT.uuid)) ELSE raw.yv_etunimi END AS yv_etunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_sukunimi, VAULT.uuid)) ELSE raw.yv_sukunimi END AS yv_sukunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_osoite, VAULT.uuid)) ELSE raw.yv_osoite END AS yv_osoite, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_postinro, VAULT.uuid)) ELSE raw.yv_postinro END AS yv_postinro, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_kaupunki, VAULT.uuid)) ELSE raw.yv_kaupunki END AS yv_kaupunki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_puhelin, VAULT.uuid)) ELSE raw.yv_puhelin END AS yv_puhelin, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_sotu, VAULT.uuid)) ELSE raw.yv_sotu END AS yv_sotu, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_tyonantaja, VAULT.uuid)) ELSE raw.yv_tyonantaja END AS yv_tyonantaja, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_tyonantajapuh, VAULT.uuid)) ELSE raw.yv_tyonantajapuh END AS yv_tyonantajapuh, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_ytunnus, VAULT.uuid)) ELSE raw.yv_ytunnus END AS yv_ytunnus, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.yv_email, VAULT.uuid)) ELSE raw.yv_email END AS yv_email, raw.* EXCEPT(yv_etunimi, yv_sukunimi, yv_osoite, yv_postinro, yv_kaupunki, yv_puhelin, yv_sotu, yv_tyonantaja, yv_tyonantajapuh, yv_ytunnus, yv_email) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_yv_candidateinfo_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.yv_sotu = VAULT.ssn 
rahalaitos_integration_legacy|rahalaitos_laina_contactinfo_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.etunimi, VAULT.uuid)) ELSE raw.etunimi END AS etunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.sukunimi, VAULT.uuid)) ELSE raw.sukunimi END AS sukunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.osoite, VAULT.uuid)) ELSE raw.osoite END AS osoite, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.postinro, VAULT.uuid)) ELSE raw.postinro END AS postinro, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.kaupunki, VAULT.uuid)) ELSE raw.kaupunki END AS kaupunki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.puhelin, VAULT.uuid)) ELSE raw.puhelin END AS puhelin, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.email, VAULT.uuid)) ELSE raw.email END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.sotu, VAULT.uuid)) ELSE raw.sotu END AS sotu, raw.* EXCEPT(etunimi, sukunimi, osoite, postinro, kaupunki, puhelin, email, sotu) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_contactinfo_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.sotu = VAULT.ssn 
lvs_integration_legacy|clients_lvs_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.email, VAULT.uuid)) ELSE raw.email END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.ssn, VAULT.uuid)) ELSE raw.ssn END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.phone, VAULT.uuid)) ELSE raw.phone END AS phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.post_code, VAULT.uuid)) ELSE raw.post_code END AS post_code, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.address, VAULT.uuid)) ELSE raw.address END AS address, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.city, VAULT.uuid)) ELSE raw.city END AS city, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.last_name, VAULT.uuid)) ELSE raw.last_name END AS last_name, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.first_name, VAULT.uuid)) ELSE raw.first_name END AS first_name, raw.* EXCEPT(email, ssn, phone, post_code, address, city, last_name, first_name) FROM `sambla-data-staging-compliance.lvs_integration_legacy.clients_lvs_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.ssn = VAULT.ssn 
lvs_integration_legacy|applicants_lvs_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.address, VAULT.uuid)) ELSE raw.address END AS address, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.last_name, VAULT.uuid)) ELSE raw.last_name END AS last_name, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.post_code, VAULT.uuid)) ELSE raw.post_code END AS post_code, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.first_name, VAULT.uuid)) ELSE raw.first_name END AS first_name, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.phone, VAULT.uuid)) ELSE raw.phone END AS phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.email, VAULT.uuid)) ELSE raw.email END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.ssn, VAULT.uuid)) ELSE raw.ssn END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.city, VAULT.uuid)) ELSE raw.city END AS city, raw.* EXCEPT(address, last_name, post_code, first_name, phone, email, ssn, city) FROM `sambla-data-staging-compliance.lvs_integration_legacy.applicants_lvs_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.ssn = VAULT.ssn 
lvs_integration_legacy|credit_remarks_lvs_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, raw.ssn_id, VAULT.uuid)) ELSE raw.ssn_id END AS ssn_id, raw.* EXCEPT(ssn_id) FROM `sambla-data-staging-compliance.lvs_integration_legacy.credit_remarks_lvs_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON raw.ssn_id = VAULT.ssn 
