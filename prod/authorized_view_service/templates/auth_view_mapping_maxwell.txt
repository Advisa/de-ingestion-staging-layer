maxwell_integration_legacy|query_params_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.query_params_sgmw_p`
maxwell_integration_legacy|loan_application_drafts_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.loan_application_drafts_sgmw_p`
maxwell_integration_legacy|customers_sgmw_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(CAST(raw.national_id AS STRING), "[^0-9]", ""), 12) AS ssn_clean FROM`sambla-data-staging-compliance.maxwell_integration_legacy.customers_sgmw_p` raw) SELECT CASE WHEN raw.email IS NOT NULL AND raw.email <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN raw.city IS NOT NULL AND raw.city <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN raw.postal_code IS NOT NULL AND raw.postal_code <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.postal_code AS STRING), VAULT.uuid)) ELSE CAST(raw.postal_code AS STRING) END AS postal_code, CASE WHEN raw.national_id IS NOT NULL AND raw.national_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, CASE WHEN raw.last_name IS NOT NULL AND raw.last_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN raw.first_name IS NOT NULL AND raw.first_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN raw.street_address IS NOT NULL AND raw.street_address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.street_address AS STRING), VAULT.uuid)) ELSE CAST(raw.street_address AS STRING) END AS street_address, CASE WHEN raw.mobile_phone IS NOT NULL AND raw.mobile_phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.mobile_phone AS STRING), VAULT.uuid)) ELSE CAST(raw.mobile_phone AS STRING) END AS mobile_phone, raw.* EXCEPT(street_address, mobile_phone, email, postal_code, last_name, city, national_id, first_name) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn
maxwell_integration_legacy|cookie_mappings_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.cookie_mappings_sgmw_p`
maxwell_integration_legacy|bid_additional_requirements_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.bid_additional_requirements_sgmw_p`
maxwell_integration_legacy|invite_logs_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.invite_logs_sgmw_p`
maxwell_integration_legacy|current_loan_drafts_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.current_loan_drafts_sgmw_p`
maxwell_integration_legacy|cookies_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.cookies_sgmw_p`
maxwell_integration_legacy|policies_sgmw_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(CAST(raw.national_id AS STRING), "[^0-9]", ""), 12) AS ssn_clean FROM`sambla-data-staging-compliance.maxwell_integration_legacy.policies_sgmw_p` raw) SELECT CASE WHEN raw.national_id IS NOT NULL AND raw.national_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, raw.* EXCEPT(national_id) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn
maxwell_integration_legacy|bid_accepts_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.bid_accepts_sgmw_p`
maxwell_integration_legacy|sent_events_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.sent_events_sgmw_p`
maxwell_integration_legacy|bids_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.bids_sgmw_p`
maxwell_integration_legacy|bid_logs_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.bid_logs_sgmw_p`
maxwell_integration_legacy|pageviews_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.pageviews_sgmw_p`
maxwell_integration_legacy|loan_applications_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.loan_applications_sgmw_p`
maxwell_integration_legacy|current_loans_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.current_loans_sgmw_p`
maxwell_integration_legacy|loan_application_versions_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.loan_application_versions_sgmw_p`
maxwell_integration_legacy|credit_report_latest_inquiries_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.credit_report_latest_inquiries_sgmw_p`
maxwell_integration_legacy|credit_reports_sgmw_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(CAST(raw.national_id AS STRING), "[^0-9]", ""), 12) AS ssn_clean FROM`sambla-data-staging-compliance.maxwell_integration_legacy.credit_reports_sgmw_p` raw) SELECT CASE WHEN raw.city IS NOT NULL AND raw.city <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN raw.postal_code IS NOT NULL AND raw.postal_code <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.postal_code AS STRING), VAULT.uuid)) ELSE CAST(raw.postal_code AS STRING) END AS postal_code, CASE WHEN raw.national_id IS NOT NULL AND raw.national_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, CASE WHEN raw.secret_address IS NOT NULL AND raw.secret_address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.secret_address AS STRING), VAULT.uuid)) ELSE CAST(raw.secret_address AS STRING) END AS secret_address, CASE WHEN raw.temporary_address IS NOT NULL AND raw.temporary_address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.temporary_address AS STRING), VAULT.uuid)) ELSE CAST(raw.temporary_address AS STRING) END AS temporary_address, CASE WHEN raw.last_name IS NOT NULL AND raw.last_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN raw.first_name IS NOT NULL AND raw.first_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN raw.street_address IS NOT NULL AND raw.street_address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.street_address AS STRING), VAULT.uuid)) ELSE CAST(raw.street_address AS STRING) END AS street_address, raw.* EXCEPT(national_id, postal_code, secret_address, temporary_address, street_address, city, first_name, last_name) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn
maxwell_integration_legacy|credit_report_xml_extract_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.credit_report_xml_extract_sgmw_p`
maxwell_integration_legacy|creditors_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.creditors_sgmw_p`
maxwell_integration_legacy|applicant_drafts_sgmw_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(CAST(raw.national_id AS STRING), "[^0-9]", ""), 12) AS ssn_clean FROM`sambla-data-staging-compliance.maxwell_integration_legacy.applicant_drafts_sgmw_p` raw) SELECT CASE WHEN raw.email IS NOT NULL AND raw.email <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN raw.city IS NOT NULL AND raw.city <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN raw.employer_name IS NOT NULL AND raw.employer_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.employer_name AS STRING), VAULT.uuid)) ELSE CAST(raw.employer_name AS STRING) END AS employer_name, CASE WHEN raw.employer_phone IS NOT NULL AND raw.employer_phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.employer_phone AS STRING), VAULT.uuid)) ELSE CAST(raw.employer_phone AS STRING) END AS employer_phone, CASE WHEN raw.postal_code IS NOT NULL AND raw.postal_code <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.postal_code AS STRING), VAULT.uuid)) ELSE CAST(raw.postal_code AS STRING) END AS postal_code, CASE WHEN raw.national_id IS NOT NULL AND raw.national_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, CASE WHEN raw.last_name IS NOT NULL AND raw.last_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN raw.first_name IS NOT NULL AND raw.first_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN raw.street_address IS NOT NULL AND raw.street_address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.street_address AS STRING), VAULT.uuid)) ELSE CAST(raw.street_address AS STRING) END AS street_address, CASE WHEN raw.mobile_phone IS NOT NULL AND raw.mobile_phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.mobile_phone AS STRING), VAULT.uuid)) ELSE CAST(raw.mobile_phone AS STRING) END AS mobile_phone, raw.* EXCEPT(national_id, employer_name, employer_phone, first_name, postal_code, email, city, last_name, street_address, mobile_phone) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn
maxwell_integration_legacy|applicants_sgmw_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(CAST(raw.national_id AS STRING), "[^0-9]", ""), 12) AS ssn_clean FROM`sambla-data-staging-compliance.maxwell_integration_legacy.applicants_sgmw_p` raw) SELECT CASE WHEN raw.email IS NOT NULL AND raw.email <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN raw.city IS NOT NULL AND raw.city <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN raw.employer_name IS NOT NULL AND raw.employer_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.employer_name AS STRING), VAULT.uuid)) ELSE CAST(raw.employer_name AS STRING) END AS employer_name, CASE WHEN raw.employer_phone IS NOT NULL AND raw.employer_phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.employer_phone AS STRING), VAULT.uuid)) ELSE CAST(raw.employer_phone AS STRING) END AS employer_phone, CASE WHEN raw.postal_code IS NOT NULL AND raw.postal_code <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.postal_code AS STRING), VAULT.uuid)) ELSE CAST(raw.postal_code AS STRING) END AS postal_code, CASE WHEN raw.national_id IS NOT NULL AND raw.national_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, CASE WHEN raw.last_name IS NOT NULL AND raw.last_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN raw.first_name IS NOT NULL AND raw.first_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN raw.street_address IS NOT NULL AND raw.street_address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.street_address AS STRING), VAULT.uuid)) ELSE CAST(raw.street_address AS STRING) END AS street_address, CASE WHEN raw.mobile_phone IS NOT NULL AND raw.mobile_phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.mobile_phone AS STRING), VAULT.uuid)) ELSE CAST(raw.mobile_phone AS STRING) END AS mobile_phone, raw.* EXCEPT(national_id, employer_name, employer_phone, first_name, postal_code, email, city, last_name, street_address, mobile_phone) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn
maxwell_integration_legacy|invites_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.invites_sgmw_p`
maxwell_integration_legacy|creditor_products_sgmw_p|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.creditor_products_sgmw_p`