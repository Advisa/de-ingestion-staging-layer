salus_integration_legacy|accounts_salus_r|SELECT * FROM `sambla-data-staging-compliance.salus_integration_legacy.accounts_salus_r|False
salus_integration_legacy|applicant-jobs_salus_r|SELECT * FROM `sambla-data-staging-compliance.salus_integration_legacy.applicant-jobs_salus_r|False
advisa_history_integration_legacy|applicants_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.applicants_adhis_r|False
lvs_integration_legacy|applicants_lvs_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.education AS STRING), VAULT.uuid)) ELSE CAST(raw.education AS STRING) END AS education, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.marital_status AS STRING), VAULT.uuid)) ELSE CAST(raw.marital_status AS STRING) END AS marital_status, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.bank_bic AS STRING), VAULT.uuid)) ELSE CAST(raw.bank_bic AS STRING) END AS bank_bic, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.is_pep AS STRING), VAULT.uuid)) ELSE CAST(raw.is_pep AS STRING) END AS is_pep, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.citizenship AS STRING), VAULT.uuid)) ELSE CAST(raw.citizenship AS STRING) END AS citizenship, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.dob AS STRING), VAULT.uuid)) ELSE CAST(raw.dob AS STRING) END AS dob, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.gender AS STRING), VAULT.uuid)) ELSE CAST(raw.gender AS STRING) END AS gender, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.address AS STRING), VAULT.uuid)) ELSE CAST(raw.address AS STRING) END AS address, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.bank_iban AS STRING), VAULT.uuid)) ELSE CAST(raw.bank_iban AS STRING) END AS bank_iban, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.post_code AS STRING), VAULT.uuid)) ELSE CAST(raw.post_code AS STRING) END AS post_code, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.phone AS STRING), VAULT.uuid)) ELSE CAST(raw.phone AS STRING) END AS phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.ssn AS STRING), VAULT.uuid)) ELSE CAST(raw.ssn AS STRING) END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, raw.* EXCEPT(education, marital_status, bank_bic, is_pep, citizenship, dob, gender, address, bank_iban, last_name, post_code, first_name, phone, email, ssn, city) FROM `sambla-data-staging-compliance.lvs_integration_legacy.applicants_lvs_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.ssn AS STRING) = VAULT.ssn |True
salus_integration_legacy|applicants_salus_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.birthdate AS STRING), VAULT.uuid)) ELSE CAST(raw.birthdate AS STRING) END AS birthdate, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.firstname AS STRING), VAULT.uuid)) ELSE CAST(raw.firstname AS STRING) END AS firstname, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.lastname AS STRING), VAULT.uuid)) ELSE CAST(raw.lastname AS STRING) END AS lastname, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.gender AS STRING), VAULT.uuid)) ELSE CAST(raw.gender AS STRING) END AS gender, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.maritalstatus AS STRING), VAULT.uuid)) ELSE CAST(raw.maritalstatus AS STRING) END AS maritalstatus, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.nationality AS STRING), VAULT.uuid)) ELSE CAST(raw.nationality AS STRING) END AS nationality, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.education AS STRING), VAULT.uuid)) ELSE CAST(raw.education AS STRING) END AS education, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.phone AS STRING), VAULT.uuid)) ELSE CAST(raw.phone AS STRING) END AS phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.ssn AS STRING), VAULT.uuid)) ELSE CAST(raw.ssn AS STRING) END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.address AS STRING), VAULT.uuid)) ELSE CAST(raw.address AS STRING) END AS address, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.zip AS STRING), VAULT.uuid)) ELSE CAST(raw.zip AS STRING) END AS zip, raw.* EXCEPT(birthdate, firstname, lastname, gender, maritalstatus, nationality, education, email, phone, ssn, address, city, zip) FROM `sambla-data-staging-compliance.salus_integration_legacy.applicants_salus_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.ssn AS STRING) = VAULT.ssn |True
sambla_legacy_integration_legacy|applications_gcs_streaming|SELECT * FROM `sambla-data-staging-compliance.sambla_legacy_integration_legacy.applications_gcs_streaming|False
advisa_history_integration_legacy|archived_ssn|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, raw.* EXCEPT(national_id) FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.archived_ssn` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.national_id AS STRING) = VAULT.ssn |True
lvs_integration_legacy|clients_lvs_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.gender AS STRING), VAULT.uuid)) ELSE CAST(raw.gender AS STRING) END AS gender, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.ssn AS STRING), VAULT.uuid)) ELSE CAST(raw.ssn AS STRING) END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.phone AS STRING), VAULT.uuid)) ELSE CAST(raw.phone AS STRING) END AS phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.dob AS STRING), VAULT.uuid)) ELSE CAST(raw.dob AS STRING) END AS dob, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.post_code AS STRING), VAULT.uuid)) ELSE CAST(raw.post_code AS STRING) END AS post_code, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.address AS STRING), VAULT.uuid)) ELSE CAST(raw.address AS STRING) END AS address, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, raw.* EXCEPT(gender, email, ssn, phone, dob, post_code, address, city, last_name, first_name) FROM `sambla-data-staging-compliance.lvs_integration_legacy.clients_lvs_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.ssn AS STRING) = VAULT.ssn |True
lvs_integration_legacy|credit_remarks_lvs_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.data AS STRING), VAULT.uuid)) ELSE CAST(raw.data AS STRING) END AS data, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.ssn_id AS STRING), VAULT.uuid)) ELSE CAST(raw.ssn_id AS STRING) END AS ssn_id, raw.* EXCEPT(data, ssn_id) FROM `sambla-data-staging-compliance.lvs_integration_legacy.credit_remarks_lvs_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.ssn_id AS STRING) = VAULT.ssn |True
rahalaitos_integration_legacy|crm_user_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.crm_user_raha_r|False
maxwell_integration_legacy|event_data_sgmw_r|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.event_data_sgmw_r|False
advisa_history_integration_legacy|insurance_customers_mdn_adhis_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.customer_ssn AS STRING), VAULT.uuid)) ELSE CAST(raw.customer_ssn AS STRING) END AS customer_ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.customer_phone AS STRING), VAULT.uuid)) ELSE CAST(raw.customer_phone AS STRING) END AS customer_phone, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.customer_email AS STRING), VAULT.uuid)) ELSE CAST(raw.customer_email AS STRING) END AS customer_email, raw.* EXCEPT(customer_ssn, customer_phone, customer_email) FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.insurance_customers_mdn_adhis_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.customer_ssn AS STRING) = VAULT.ssn |True
rahalaitos_integration_legacy|insurance_history_username_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_history_username_raha_r|False
rahalaitos_integration_legacy|insurance_insurance_product_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_insurance_product_raha_r|False
rahalaitos_integration_legacy|insurance_log_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_log_raha_r|False
rahalaitos_integration_legacy|insurance_person_agent_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_person_agent_raha_r|False
rahalaitos_integration_legacy|insurance_person_identify_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_person_identify_raha_r|False
rahalaitos_integration_legacy|insurance_person_information_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_person_information_raha_r|False
rahalaitos_integration_legacy|insurance_postal_code_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.insurance_postal_code_raha_r|False
advisa_history_integration_legacy|insurance_repayments_mutual_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.insurance_repayments_mutual_adhis_r|False
advisa_history_integration_legacy|insurance_users_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.insurance_users_adhis_r|False
advisa_history_integration_legacy|insurance_users_mdn_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.insurance_users_mdn_adhis_r|False
advisa_history_integration_legacy|invoices_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.invoices_adhis_r|False
rahalaitos_integration_legacy|marketing_applicant_business_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.marketing_applicant_business_raha_r|False
rahalaitos_integration_legacy|marketing_applicant_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.sotu AS STRING), VAULT.uuid)) ELSE CAST(raw.sotu AS STRING) END AS sotu, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.etunimi AS STRING), VAULT.uuid)) ELSE CAST(raw.etunimi AS STRING) END AS etunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.sukunimi AS STRING), VAULT.uuid)) ELSE CAST(raw.sukunimi AS STRING) END AS sukunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.puhelin AS STRING), VAULT.uuid)) ELSE CAST(raw.puhelin AS STRING) END AS puhelin, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.osoite AS STRING), VAULT.uuid)) ELSE CAST(raw.osoite AS STRING) END AS osoite, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.kaupunki AS STRING), VAULT.uuid)) ELSE CAST(raw.kaupunki AS STRING) END AS kaupunki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.postinro AS STRING), VAULT.uuid)) ELSE CAST(raw.postinro AS STRING) END AS postinro, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.gender AS STRING), VAULT.uuid)) ELSE CAST(raw.gender AS STRING) END AS gender, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.pankki AS STRING), VAULT.uuid)) ELSE CAST(raw.pankki AS STRING) END AS pankki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.tili AS STRING), VAULT.uuid)) ELSE CAST(raw.tili AS STRING) END AS tili, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yhtio AS STRING), VAULT.uuid)) ELSE CAST(raw.yhtio AS STRING) END AS yhtio, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.birthdate AS STRING), VAULT.uuid)) ELSE CAST(raw.birthdate AS STRING) END AS birthdate, raw.* EXCEPT(sotu, etunimi, sukunimi, puhelin, email, osoite, kaupunki, postinro, gender, pankki, tili, yhtio, birthdate) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.marketing_applicant_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.sotu AS STRING) = VAULT.ssn |True
rahalaitos_integration_legacy|marketing_external_marketing_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.marketing_external_marketing_raha_r|False
rahalaitos_integration_legacy|marketing_marketing_ban_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.marketing_marketing_ban_raha_r|False
rahalaitos_integration_legacy|marketing_marketing_outpayment_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.marketing_marketing_outpayment_raha_r|False
advisa_history_integration_legacy|people_adhis_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, raw.* EXCEPT(national_id) FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.people_adhis_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.national_id_sensitive AS STRING) = VAULT.ssn |True
lvs_integration_legacy|providers_lvs_r|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.providers_lvs_r|False
rahalaitos_integration_legacy|rahalaitos_all_customers_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_all_customers_r|False
rahalaitos_integration_legacy|rahalaitos_application_ispep_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_application_ispep_raha_r|False
rahalaitos_integration_legacy|rahalaitos_citizenShip_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_citizenShip_raha_r|False
rahalaitos_integration_legacy|rahalaitos_customer_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.ssn AS STRING), VAULT.uuid)) ELSE CAST(raw.ssn AS STRING) END AS ssn, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.gender AS STRING), VAULT.uuid)) ELSE CAST(raw.gender AS STRING) END AS gender, raw.* EXCEPT(ssn, gender) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_customer_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.ssn AS STRING) = VAULT.ssn |True
rahalaitos_integration_legacy|rahalaitos_incomplete_applications_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_incomplete_applications_r|False
rahalaitos_integration_legacy|rahalaitos_laina_bankinfo_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_bankinfo_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_businessinfo_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_businessinfo_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_companyinfo_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_companyinfo_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_contactinfo_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.etunimi AS STRING), VAULT.uuid)) ELSE CAST(raw.etunimi AS STRING) END AS etunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.sukunimi AS STRING), VAULT.uuid)) ELSE CAST(raw.sukunimi AS STRING) END AS sukunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.osoite AS STRING), VAULT.uuid)) ELSE CAST(raw.osoite AS STRING) END AS osoite, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.postinro AS STRING), VAULT.uuid)) ELSE CAST(raw.postinro AS STRING) END AS postinro, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.kaupunki AS STRING), VAULT.uuid)) ELSE CAST(raw.kaupunki AS STRING) END AS kaupunki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.puhelin AS STRING), VAULT.uuid)) ELSE CAST(raw.puhelin AS STRING) END AS puhelin, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.sotu AS STRING), VAULT.uuid)) ELSE CAST(raw.sotu AS STRING) END AS sotu, raw.* EXCEPT(etunimi, sukunimi, osoite, postinro, kaupunki, puhelin, email, sotu) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_contactinfo_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.sotu AS STRING) = VAULT.ssn |True
rahalaitos_integration_legacy|rahalaitos_laina_kieltolista_sms_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_kieltolista_sms_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_orders_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_orders_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_rahoistuspaatos_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_rahoistuspaatos_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_workinfo_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_workinfo_raha_r|False
rahalaitos_integration_legacy|rahalaitos_laina_yv_candidateinfo_raha_r|SELECT CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_etunimi AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_etunimi AS STRING) END AS yv_etunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_sukunimi AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_sukunimi AS STRING) END AS yv_sukunimi, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_osoite AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_osoite AS STRING) END AS yv_osoite, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_postinro AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_postinro AS STRING) END AS yv_postinro, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_kaupunki AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_kaupunki AS STRING) END AS yv_kaupunki, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_puhelin AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_puhelin AS STRING) END AS yv_puhelin, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_sotu AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_sotu AS STRING) END AS yv_sotu, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_siviilisaaty AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_siviilisaaty AS STRING) END AS yv_siviilisaaty, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_tyonantaja AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_tyonantaja AS STRING) END AS yv_tyonantaja, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_tyonantajapuh AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_tyonantajapuh AS STRING) END AS yv_tyonantajapuh, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_ytunnus AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_ytunnus AS STRING) END AS yv_ytunnus, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_email AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_email AS STRING) END AS yv_email, CASE WHEN VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.yv_koulutus AS STRING), VAULT.uuid)) ELSE CAST(raw.yv_koulutus AS STRING) END AS yv_koulutus, raw.* EXCEPT(yv_etunimi, yv_sukunimi, yv_osoite, yv_postinro, yv_kaupunki, yv_puhelin, yv_sotu, yv_siviilisaaty, yv_tyonantaja, yv_tyonantajapuh, yv_ytunnus, yv_email, yv_koulutus) FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_laina_yv_candidateinfo_raha_r` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault` VAULT ON CAST(raw.yv_sotu AS STRING) = VAULT.ssn |True
rahalaitos_integration_legacy|rahalaitos_marketing_email_temp_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_marketing_email_temp_raha_r|False
rahalaitos_integration_legacy|rahalaitos_marketing_sms_temp_raha_r|SELECT * FROM `sambla-data-staging-compliance.rahalaitos_integration_legacy.rahalaitos_marketing_sms_temp_raha_r|False
maxwell_integration_legacy|raw_data_snowflake_export_persisted|SELECT * FROM `sambla-data-staging-compliance.maxwell_integration_legacy.raw_data_snowflake_export_persisted|False
advisa_history_integration_legacy|subscription_month_invoice_items_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.subscription_month_invoice_items_adhis_r|False
advisa_history_integration_legacy|subscriptions_adhis_r|SELECT * FROM `sambla-data-staging-compliance.advisa_history_integration_legacy.subscriptions_adhis_r|False
sambla_legacy_integration_legacy|users_gcs_streaming|SELECT * FROM `sambla-data-staging-compliance.sambla_legacy_integration_legacy.users_gcs_streaming|False
