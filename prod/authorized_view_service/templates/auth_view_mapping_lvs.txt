lvs_integration_legacy|offer_states_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.offer_states_lvs_p`
lvs_integration_legacy|applications_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.applications_lvs_p`
lvs_integration_legacy|offers_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.offers_lvs_p`
lvs_integration_legacy|applicant_financials_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.applicant_financials_lvs_p`
lvs_integration_legacy|applicant_consents_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.applicant_consents_lvs_p`
lvs_integration_legacy|applicant_cards_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.applicant_cards_lvs_p`
lvs_integration_legacy|application_commissions_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.application_commissions_lvs_p`
lvs_integration_legacy|credit_remarks_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.credit_remarks_lvs_p`
lvs_integration_legacy|providers_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.providers_lvs_p`
lvs_integration_legacy|clients_lvs_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(UPPER(CAST(raw.national_id AS STRING)), "[^0-9-+A-Z]", ""), 11) AS ssn_clean FROM`sambla-data-staging-compliance.lvs_integration_legacy.clients_lvs_p` raw) SELECT CASE WHEN raw.email IS NOT NULL  AND raw.email <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN raw.phone IS NOT NULL  AND raw.phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.phone AS STRING), VAULT.uuid)) ELSE CAST(raw.phone AS STRING) END AS phone, CASE WHEN raw.post_code IS NOT NULL  AND raw.post_code <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.post_code AS STRING), VAULT.uuid)) ELSE CAST(raw.post_code AS STRING) END AS post_code, CASE WHEN raw.address IS NOT NULL  AND raw.address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.address AS STRING), VAULT.uuid)) ELSE CAST(raw.address AS STRING) END AS address, CASE WHEN raw.city IS NOT NULL  AND raw.city <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN raw.last_name IS NOT NULL  AND raw.last_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN raw.first_name IS NOT NULL  AND raw.first_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN raw.national_id IS NOT NULL  AND raw.national_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.national_id AS STRING), VAULT.uuid)) ELSE CAST(raw.national_id AS STRING) END AS national_id, raw.* EXCEPT(email, phone, post_code, address, city, last_name, first_name, national_id) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn
lvs_integration_legacy|provider_commissions_lvs_p|SELECT * FROM `sambla-data-staging-compliance.lvs_integration_legacy.provider_commissions_lvs_p`
lvs_integration_legacy|applicants_lvs_p|WITH data_with_ssn_rules AS (SELECT *, LEFT(REGEXP_REPLACE(UPPER(CAST(raw.ssn AS STRING)), "[^0-9-+A-Z]", ""), 11) AS ssn_clean FROM`sambla-data-staging-compliance.lvs_integration_legacy.applicants_lvs_p` raw) SELECT CASE WHEN raw.first_name IS NOT NULL  AND raw.first_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.first_name AS STRING), VAULT.uuid)) ELSE CAST(raw.first_name AS STRING) END AS first_name, CASE WHEN raw.last_name IS NOT NULL  AND raw.last_name <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.last_name AS STRING), VAULT.uuid)) ELSE CAST(raw.last_name AS STRING) END AS last_name, CASE WHEN raw.phone IS NOT NULL  AND raw.phone <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.phone AS STRING), VAULT.uuid)) ELSE CAST(raw.phone AS STRING) END AS phone, CASE WHEN raw.email IS NOT NULL  AND raw.email <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.email AS STRING), VAULT.uuid)) ELSE CAST(raw.email AS STRING) END AS email, CASE WHEN raw.ssn IS NOT NULL  AND raw.ssn <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.ssn AS STRING), VAULT.uuid)) ELSE CAST(raw.ssn AS STRING) END AS ssn, CASE WHEN raw.city IS NOT NULL  AND raw.city <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.city AS STRING), VAULT.uuid)) ELSE CAST(raw.city AS STRING) END AS city, CASE WHEN raw.post_code IS NOT NULL  AND raw.post_code <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.post_code AS STRING), VAULT.uuid)) ELSE CAST(raw.post_code AS STRING) END AS post_code, CASE WHEN raw.address IS NOT NULL  AND raw.address <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.address AS STRING), VAULT.uuid)) ELSE CAST(raw.address AS STRING) END AS address, CASE WHEN raw.bank_bic IS NOT NULL  AND raw.bank_bic <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.bank_bic AS STRING), VAULT.uuid)) ELSE CAST(raw.bank_bic AS STRING) END AS bank_bic, CASE WHEN raw.bank_iban IS NOT NULL  AND raw.bank_iban <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.bank_iban AS STRING), VAULT.uuid)) ELSE CAST(raw.bank_iban AS STRING) END AS bank_iban, CASE WHEN raw.employment_business_id IS NOT NULL  AND raw.employment_business_id <> '' AND VAULT.uuid IS NOT NULL THEN TO_HEX(SAFE.DETERMINISTIC_ENCRYPT(VAULT.aead_key, CAST(raw.employment_business_id AS STRING), VAULT.uuid)) ELSE CAST(raw.employment_business_id AS STRING) END AS employment_business_id, raw.* EXCEPT(first_name, last_name, phone, email, ssn, city, post_code, address, bank_bic, bank_iban, employment_business_id) FROM `data_with_ssn_rules` raw LEFT JOIN `sambla-group-compliance-db.compilance_database.gdpr_vault_rudolf` VAULT ON CAST(raw.ssn_clean AS STRING) = VAULT.ssn