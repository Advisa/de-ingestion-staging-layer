#In the future when we do the complete implementation this will be the setup, 
#for now this is sample cloudbuild this is not used or tested for prototype.

steps:
# Step 1: Build Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/anonymisation_service', '.']

# Step 2: Push Docker Image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/anonymisation_service']

# Step 3: Deploy Cloud Function
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'functions'
    - 'deploy'
    - 'anonymisation_service'
    - '--image'
    - 'gcr.io/$PROJECT_ID/anonymisation_service'
    - '--runtime'
    - 'python39'
    - '--trigger-http'
    - '--allow-unauthenticated'
    - '--entry-point'
    - 'main'

# Step 4: Deploy the Prefect flow
- name: 'prefecthq/prefect:2.14-python3.11'
  entrypoint: '/bin/bash'
  dir: 'anonymisation_service'
  secretEnv: ['prefect_token']
  args:
   - '-c'
   - |
       ls -la
       export ENV="$_ENVIRONMENT"
       apt-get update && apt-get -y install jq
       pip install --upgrade pip
       pip install -r requirements.txt
       prefect cloud login --key $(echo "$$prefect_token" | jq -r .$_ENVIRONMENT.api_key) --workspace adamsvensonsamblagroupcom/sambla-group-orchestration-production
       prefect deploy main.py:main --name gdpr_$_ENVIRONMENT
options:
  logging: CLOUD_LOGGING_ONLY

# Get SSH key from Secret Manager
availableSecrets:
  secretManager:
  - versionName: projects/$_PROJECT/secrets/prefect-secrets/versions/latest
    env: 'prefect_token'
